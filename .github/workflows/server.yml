name: Server

on:
  push:
    # branches:
    #   - main
    paths:
      - 'projects/server/**'
      - 'scripts/**'
      - '.github/workflows/server.yml'

jobs:
  check-build:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Check branch code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir.outputs.dir }}
            node_modules
            */*/node_modules
            ~/.cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --pure-lockfile

      - name: Build Server
        run: yarn server:build

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check branch code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install Heroku CLI
        run: npm install -g heroku

      - name: Git globals
        run: |
          git config --global user.email "melo.raulf@gmail.com"
          git config --global user.name "Raul Melo"

      - name: Create netrc
        run: ./scripts/heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Deploy server to Heroku
        run: |
          heroku git:remote -a raulmelo-dev-server
          git push heroku `git subtree split --prefix projects/server`:main --force
